version: '3'
services:
  zookeeper:
    image: "wurstmeister/zookeeper:3.4.6"
    container_name: "zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
  pgcontainer:
    build: ./postgres-service
    image: pgcontainer
    container_name: "pgcontainer"
    ports: 
      - 5433:5432
  consumer:
    build: ./Consumer
    image: consumer
    container_name: "consumer"
    restart: on-failure:10
    depends_on:
      - "kafkaservice"
  producer:
    build: ./Producer
    image: producer
    container_name: "producer"
    restart: on-failure:3
    depends_on:
      - kafkaservice
  kafkaservice:
    image: "wurstmeister/kafka:2.11-2.0.0"
    ports:
      - "9092:9092"
    container_name: "kafkaservice"
    environment:
      HOSTNAME_COMMAND: "echo $$HOSTNAME"
      KAFKA_LISTENERS: INSIDE://kafkaservice:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafkaservice:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "userMockData:1:1"
    depends_on:
      - "zookeeper"
networks:
  default:
    external:
      name: "services_network"
